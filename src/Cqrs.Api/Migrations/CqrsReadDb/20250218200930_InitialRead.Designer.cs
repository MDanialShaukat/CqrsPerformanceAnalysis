// <auto-generated />
using System;
using Cqrs.Api.Common.DataAccess.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Cqrs.Api.Migrations.CqrsReadDb
{
    [DbContext(typeof(CqrsReadDbContext))]
    [Migration("20250218200930_InitialRead")]
    partial class InitialRead
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ArticleCategory", b =>
                {
                    b.Property<int>("ArticlesId")
                        .HasColumnType("int")
                        .HasColumnName("articles_id");

                    b.Property<int>("CategoriesId")
                        .HasColumnType("int")
                        .HasColumnName("categories_id");

                    b.HasKey("ArticlesId", "CategoriesId")
                        .HasName("pk_article_category");

                    b.HasIndex("CategoriesId")
                        .HasDatabaseName("ix_article_category_categories_id");

                    b.ToTable("article_category", (string)null);
                });

            modelBuilder.Entity("Cqrs.Api.UseCases.Articles.Persistence.Entities.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArticleNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("article_number");

                    b.Property<int>("CharacteristicId")
                        .HasColumnType("int")
                        .HasColumnName("characteristic_id");

                    b.HasKey("Id")
                        .HasName("pk_articles");

                    b.HasIndex("ArticleNumber", "CharacteristicId")
                        .IsUnique()
                        .HasDatabaseName("ix_articles_article_number_characteristic_id");

                    b.ToTable("articles", (string)null);
                });

            modelBuilder.Entity("Cqrs.Api.UseCases.Attributes.Common.Persistence.Entities.Attribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AllowedValues")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("allowed_values");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("ExampleValues")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("example_values");

                    b.Property<bool>("IsEditable")
                        .HasColumnType("bit")
                        .HasColumnName("is_editable");

                    b.Property<string>("MarketplaceAttributeIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("marketplace_attribute_ids");

                    b.Property<decimal?>("MaxLength")
                        .HasPrecision(24, 6)
                        .HasColumnType("decimal(24,6)")
                        .HasColumnName("max_length");

                    b.Property<int>("MaxValues")
                        .HasColumnType("int")
                        .HasColumnName("max_values");

                    b.Property<decimal?>("MinLength")
                        .HasPrecision(24, 6)
                        .HasColumnType("decimal(24,6)")
                        .HasColumnName("min_length");

                    b.Property<int>("MinValues")
                        .HasColumnType("int")
                        .HasColumnName("min_values");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<int?>("ParentAttributeId")
                        .HasColumnType("int")
                        .HasColumnName("parent_attribute_id");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("product_type")
                        .HasComputedColumnSql("SUBSTRING([marketplace_attribute_ids], 1, \r\n                    CAST((CHARINDEX(',', [marketplace_attribute_ids]) - 1 \r\n                    + (1 - ROUND(CAST(CHARINDEX(',', [marketplace_attribute_ids]) AS FLOAT) \r\n                    / (1.0 * CHARINDEX(',', [marketplace_attribute_ids]) + 1), 0))) \r\n                    * (LEN([marketplace_attribute_ids]) + 1) AS INT))", true);

                    b.Property<int>("RootCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("root_category_id");

                    b.Property<string>("ValueType")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("value_type");

                    b.HasKey("Id")
                        .HasName("pk_attributes");

                    b.HasIndex("MarketplaceAttributeIds")
                        .HasDatabaseName("ix_attributes_marketplace_attribute_ids");

                    b.HasIndex("ParentAttributeId")
                        .HasDatabaseName("ix_attributes_parent_attribute_id");

                    b.HasIndex("ProductType")
                        .HasDatabaseName("ix_attributes_product_type");

                    b.HasIndex("RootCategoryId")
                        .HasDatabaseName("ix_attributes_root_category_id");

                    b.HasIndex("ValueType")
                        .HasDatabaseName("ix_attributes_value_type");

                    b.ToTable("attributes", (string)null);
                });

            modelBuilder.Entity("Cqrs.Api.UseCases.Attributes.Common.Persistence.Entities.AttributeMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AttributeReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("attribute_reference");

                    b.Property<string>("Mapping")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("mapping");

                    b.HasKey("Id")
                        .HasName("pk_attribute_mappings");

                    b.HasIndex("AttributeReference")
                        .IsUnique()
                        .HasDatabaseName("ix_attribute_mappings_attribute_reference");

                    b.ToTable("attribute_mappings", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AttributeReference = "condition_type,value",
                            Mapping = "new_new"
                        },
                        new
                        {
                            Id = 2,
                            AttributeReference = "externally_assigned_product_identifier,type",
                            Mapping = "ean"
                        },
                        new
                        {
                            Id = 3,
                            AttributeReference = "manufacturer,value",
                            Mapping = "CompanyName"
                        },
                        new
                        {
                            Id = 4,
                            AttributeReference = "brand,value",
                            Mapping = "CompanyName"
                        },
                        new
                        {
                            Id = 5,
                            AttributeReference = "country_of_origin,value",
                            Mapping = "DE"
                        },
                        new
                        {
                            Id = 6,
                            AttributeReference = "item_package_weight,unit",
                            Mapping = "kilograms"
                        },
                        new
                        {
                            Id = 7,
                            AttributeReference = "item_weight,unit",
                            Mapping = "kilograms"
                        },
                        new
                        {
                            Id = 8,
                            AttributeReference = "item_package_dimensions,length,unit",
                            Mapping = "centimeters"
                        },
                        new
                        {
                            Id = 9,
                            AttributeReference = "item_package_dimensions,height,unit",
                            Mapping = "centimeters"
                        },
                        new
                        {
                            Id = 10,
                            AttributeReference = "item_package_dimensions,width,unit",
                            Mapping = "centimeters"
                        },
                        new
                        {
                            Id = 11,
                            AttributeReference = "item_dimensions,length,unit",
                            Mapping = "centimeters"
                        },
                        new
                        {
                            Id = 12,
                            AttributeReference = "item_dimensions,height,unit",
                            Mapping = "centimeters"
                        },
                        new
                        {
                            Id = 13,
                            AttributeReference = "item_dimensions,width,unit",
                            Mapping = "centimeters"
                        },
                        new
                        {
                            Id = 14,
                            AttributeReference = "supplier_declared_dg_hz_regulation,value",
                            Mapping = "not_applicable"
                        },
                        new
                        {
                            Id = 15,
                            AttributeReference = "supplier_declared_material_regulation,value",
                            Mapping = "not_applicable"
                        },
                        new
                        {
                            Id = 16,
                            AttributeReference = "item_name,value",
                            Mapping = "TitleMarketplace"
                        },
                        new
                        {
                            Id = 17,
                            AttributeReference = "item_type_name,value",
                            Mapping = "TitleMarketplace"
                        },
                        new
                        {
                            Id = 18,
                            AttributeReference = "item_package_weight,value",
                            Mapping = "SingleItemPackageWeight"
                        },
                        new
                        {
                            Id = 19,
                            AttributeReference = "item_weight,value",
                            Mapping = "Weight"
                        },
                        new
                        {
                            Id = 20,
                            AttributeReference = "item_package_dimensions,length,value",
                            Mapping = "SingleItemPackageLength"
                        },
                        new
                        {
                            Id = 21,
                            AttributeReference = "item_package_dimensions,height,value",
                            Mapping = "SingleItemPackageHeight"
                        },
                        new
                        {
                            Id = 22,
                            AttributeReference = "item_package_dimensions,width,value",
                            Mapping = "SingleItemPackageWidth"
                        },
                        new
                        {
                            Id = 23,
                            AttributeReference = "item_dimensions,length,value",
                            Mapping = "Length"
                        },
                        new
                        {
                            Id = 24,
                            AttributeReference = "item_dimensions,height,value",
                            Mapping = "Height"
                        },
                        new
                        {
                            Id = 25,
                            AttributeReference = "item_dimensions,width,value",
                            Mapping = "Width"
                        },
                        new
                        {
                            Id = 26,
                            AttributeReference = "product_description,value",
                            Mapping = "DescriptionLongMarketplaces"
                        },
                        new
                        {
                            Id = 27,
                            AttributeReference = "bullet_point,value1",
                            Mapping = "MarketplaceBulletPoint1"
                        },
                        new
                        {
                            Id = 28,
                            AttributeReference = "bullet_point,value2",
                            Mapping = "MarketplaceBulletPoint2"
                        },
                        new
                        {
                            Id = 29,
                            AttributeReference = "bullet_point,value3",
                            Mapping = "MarketplaceBulletPoint3"
                        },
                        new
                        {
                            Id = 30,
                            AttributeReference = "bullet_point,value4",
                            Mapping = "MarketplaceBulletPoint4"
                        },
                        new
                        {
                            Id = 31,
                            AttributeReference = "bullet_point,value5",
                            Mapping = "MarketplaceBulletPoint5"
                        },
                        new
                        {
                            Id = 32,
                            AttributeReference = "is_fragile,value",
                            Mapping = "Fragile"
                        },
                        new
                        {
                            Id = 33,
                            AttributeReference = "mob",
                            Mapping = "SingleItemPreferredPackaging"
                        },
                        new
                        {
                            Id = 34,
                            AttributeReference = "power_plug_type,value",
                            Mapping = "PowerPlug"
                        },
                        new
                        {
                            Id = 35,
                            AttributeReference = "color,value",
                            Mapping = "Colors"
                        },
                        new
                        {
                            Id = 36,
                            AttributeReference = "list_price,currency",
                            Mapping = "EUR"
                        },
                        new
                        {
                            Id = 37,
                            AttributeReference = "generic_keyword,value",
                            Mapping = "SearchTermsMarketplace"
                        },
                        new
                        {
                            Id = 38,
                            AttributeReference = "item_depth_width_height,depth,unit",
                            Mapping = "centimeters"
                        },
                        new
                        {
                            Id = 39,
                            AttributeReference = "item_depth_width_height,height,unit",
                            Mapping = "centimeters"
                        },
                        new
                        {
                            Id = 40,
                            AttributeReference = "item_depth_width_height,width,unit",
                            Mapping = "centimeters"
                        },
                        new
                        {
                            Id = 41,
                            AttributeReference = "item_depth_width_height,depth,value",
                            Mapping = "Length"
                        },
                        new
                        {
                            Id = 42,
                            AttributeReference = "item_depth_width_height,height,value",
                            Mapping = "Height"
                        },
                        new
                        {
                            Id = 43,
                            AttributeReference = "item_depth_width_height,width,value",
                            Mapping = "Width"
                        },
                        new
                        {
                            Id = 44,
                            AttributeReference = "number_of_boxes,value",
                            Mapping = "1"
                        },
                        new
                        {
                            Id = 45,
                            AttributeReference = "recommended_browse_nodes,value"
                        },
                        new
                        {
                            Id = 46,
                            AttributeReference = "purchase_api_materials",
                            Mapping = "customerMaterials"
                        },
                        new
                        {
                            Id = 47,
                            AttributeReference = "material_percentages",
                            Mapping = "materialPercentage"
                        },
                        new
                        {
                            Id = 48,
                            AttributeReference = "images",
                            Mapping = "ImageUrl"
                        },
                        new
                        {
                            Id = 49,
                            AttributeReference = "unit_count,value",
                            Mapping = "1"
                        },
                        new
                        {
                            Id = 50,
                            AttributeReference = "unit_count,type,value"
                        },
                        new
                        {
                            Id = 51,
                            AttributeReference = "material,value"
                        },
                        new
                        {
                            Id = 52,
                            AttributeReference = "batteries_required,value",
                            Mapping = "EnergyStorageModelBattery"
                        },
                        new
                        {
                            Id = 53,
                            AttributeReference = "battery_type_accumulator",
                            Mapping = "EnergyStorageModelAccumulator"
                        },
                        new
                        {
                            Id = 54,
                            AttributeReference = "batteries_included,value",
                            Mapping = "EnergyStorageAmount"
                        },
                        new
                        {
                            Id = 55,
                            AttributeReference = "parent_item_name,value",
                            Mapping = "parent_TitleMarketplace"
                        },
                        new
                        {
                            Id = 56,
                            AttributeReference = "parent_bullet_point,value1",
                            Mapping = "parent_MarketplaceBulletPoint1"
                        },
                        new
                        {
                            Id = 57,
                            AttributeReference = "parent_bullet_point,value2",
                            Mapping = "parent_MarketplaceBulletPoint2"
                        },
                        new
                        {
                            Id = 58,
                            AttributeReference = "parent_bullet_point,value3",
                            Mapping = "parent_MarketplaceBulletPoint3"
                        },
                        new
                        {
                            Id = 59,
                            AttributeReference = "parent_bullet_point,value4",
                            Mapping = "parent_MarketplaceBulletPoint4"
                        },
                        new
                        {
                            Id = 60,
                            AttributeReference = "parent_bullet_point,value5",
                            Mapping = "parent_MarketplaceBulletPoint5"
                        },
                        new
                        {
                            Id = 61,
                            AttributeReference = "parent_product_description,value",
                            Mapping = "parent_DescriptionLongMarketplaces"
                        },
                        new
                        {
                            Id = 62,
                            AttributeReference = "color,standardized_values"
                        },
                        new
                        {
                            Id = 63,
                            AttributeReference = "is_expiration_dated_product,value",
                            Mapping = "false"
                        },
                        new
                        {
                            Id = 64,
                            AttributeReference = "deprecated_offering_start_date,value"
                        },
                        new
                        {
                            Id = 65,
                            AttributeReference = "model_number,value"
                        },
                        new
                        {
                            Id = 66,
                            AttributeReference = "model_name,value",
                            Mapping = "TitleShop"
                        },
                        new
                        {
                            Id = 67,
                            AttributeReference = "included_components,value",
                            Mapping = "DeliveryContentsText"
                        },
                        new
                        {
                            Id = 68,
                            AttributeReference = "department,value",
                            Mapping = "CompanyName"
                        },
                        new
                        {
                            Id = 69,
                            AttributeReference = "item_width_height,width,value",
                            Mapping = "Width"
                        },
                        new
                        {
                            Id = 70,
                            AttributeReference = "item_width_height,height,value",
                            Mapping = "Height"
                        },
                        new
                        {
                            Id = 71,
                            AttributeReference = "item_length_width,width,value",
                            Mapping = "Width"
                        },
                        new
                        {
                            Id = 72,
                            AttributeReference = "item_length_width,length,value",
                            Mapping = "Length"
                        },
                        new
                        {
                            Id = 73,
                            AttributeReference = "item_length_width_height,height,value",
                            Mapping = "Height"
                        },
                        new
                        {
                            Id = 74,
                            AttributeReference = "item_length_width_height,length,value",
                            Mapping = "Length"
                        },
                        new
                        {
                            Id = 75,
                            AttributeReference = "item_length_width_height,width,value",
                            Mapping = "Width"
                        },
                        new
                        {
                            Id = 76,
                            AttributeReference = "item_length_width_thickness,thickness,value",
                            Mapping = "Height"
                        },
                        new
                        {
                            Id = 77,
                            AttributeReference = "item_length_width_thickness,length,value",
                            Mapping = "Length"
                        },
                        new
                        {
                            Id = 78,
                            AttributeReference = "item_length_width_thickness,width,value",
                            Mapping = "Width"
                        },
                        new
                        {
                            Id = 79,
                            AttributeReference = "item_width_height,width,unit",
                            Mapping = "centimeters"
                        },
                        new
                        {
                            Id = 80,
                            AttributeReference = "item_width_height,height,unit",
                            Mapping = "centimeters"
                        },
                        new
                        {
                            Id = 81,
                            AttributeReference = "item_length_width,width,unit",
                            Mapping = "centimeters"
                        },
                        new
                        {
                            Id = 82,
                            AttributeReference = "item_length_width,length,unit",
                            Mapping = "centimeters"
                        },
                        new
                        {
                            Id = 83,
                            AttributeReference = "item_length_width_height,height,unit",
                            Mapping = "centimeters"
                        },
                        new
                        {
                            Id = 84,
                            AttributeReference = "item_length_width_height,length,unit",
                            Mapping = "centimeters"
                        },
                        new
                        {
                            Id = 85,
                            AttributeReference = "item_length_width_height,width,unit",
                            Mapping = "centimeters"
                        },
                        new
                        {
                            Id = 86,
                            AttributeReference = "item_length_width_thickness,thickness,unit",
                            Mapping = "centimeters"
                        },
                        new
                        {
                            Id = 87,
                            AttributeReference = "item_length_width_thickness,length,unit",
                            Mapping = "centimeters"
                        },
                        new
                        {
                            Id = 88,
                            AttributeReference = "item_length_width_thickness,width,unit",
                            Mapping = "centimeters"
                        },
                        new
                        {
                            Id = 89,
                            AttributeReference = "contains_food_or_beverage,value",
                            Mapping = "false"
                        },
                        new
                        {
                            Id = 90,
                            AttributeReference = "is_oem_authorized,value",
                            Mapping = "false"
                        },
                        new
                        {
                            Id = 91,
                            AttributeReference = "product_expiration_type,value",
                            Mapping = "Does Not Expire"
                        },
                        new
                        {
                            Id = 92,
                            AttributeReference = "warranty_description,value",
                            Mapping = "-"
                        },
                        new
                        {
                            Id = 93,
                            AttributeReference = "list_price,value_with_tax",
                            Mapping = "0"
                        });
                });

            modelBuilder.Entity("Cqrs.Api.UseCases.Attributes.Common.Persistence.Entities.AttributeValues.AttributeBooleanValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticleId")
                        .HasColumnType("int")
                        .HasColumnName("article_id");

                    b.Property<int>("AttributeId")
                        .HasColumnType("int")
                        .HasColumnName("attribute_id");

                    b.Property<bool>("Value")
                        .HasColumnType("bit")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("pk_attribute_boolean_values");

                    b.HasIndex("ArticleId")
                        .HasDatabaseName("ix_attribute_boolean_values_article_id");

                    b.HasIndex("AttributeId")
                        .HasDatabaseName("ix_attribute_boolean_values_attribute_id");

                    b.ToTable("attribute_boolean_values", (string)null);
                });

            modelBuilder.Entity("Cqrs.Api.UseCases.Attributes.Common.Persistence.Entities.AttributeValues.AttributeDecimalValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticleId")
                        .HasColumnType("int")
                        .HasColumnName("article_id");

                    b.Property<int>("AttributeId")
                        .HasColumnType("int")
                        .HasColumnName("attribute_id");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric(9,3)")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("pk_attribute_decimal_values");

                    b.HasIndex("ArticleId")
                        .HasDatabaseName("ix_attribute_decimal_values_article_id");

                    b.HasIndex("AttributeId")
                        .HasDatabaseName("ix_attribute_decimal_values_attribute_id");

                    b.ToTable("attribute_decimal_values", (string)null);
                });

            modelBuilder.Entity("Cqrs.Api.UseCases.Attributes.Common.Persistence.Entities.AttributeValues.AttributeIntValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticleId")
                        .HasColumnType("int")
                        .HasColumnName("article_id");

                    b.Property<int>("AttributeId")
                        .HasColumnType("int")
                        .HasColumnName("attribute_id");

                    b.Property<int>("Value")
                        .HasColumnType("int")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("pk_attribute_int_values");

                    b.HasIndex("ArticleId")
                        .HasDatabaseName("ix_attribute_int_values_article_id");

                    b.HasIndex("AttributeId")
                        .HasDatabaseName("ix_attribute_int_values_attribute_id");

                    b.ToTable("attribute_int_values", (string)null);
                });

            modelBuilder.Entity("Cqrs.Api.UseCases.Attributes.Common.Persistence.Entities.AttributeValues.AttributeStringValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticleId")
                        .HasColumnType("int")
                        .HasColumnName("article_id");

                    b.Property<int>("AttributeId")
                        .HasColumnType("int")
                        .HasColumnName("attribute_id");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("pk_attribute_string_values");

                    b.HasIndex("ArticleId")
                        .HasDatabaseName("ix_attribute_string_values_article_id");

                    b.HasIndex("AttributeId")
                        .HasDatabaseName("ix_attribute_string_values_attribute_id");

                    b.ToTable("attribute_string_values", (string)null);
                });

            modelBuilder.Entity("Cqrs.Api.UseCases.Categories.Common.Persistence.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("CategoryNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("category_number");

                    b.Property<bool>("IsLeaf")
                        .HasColumnType("bit")
                        .HasColumnName("is_leaf");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_id");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("path");

                    b.Property<int>("RootCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("root_category_id");

                    b.HasKey("Id")
                        .HasName("pk_categories");

                    b.HasIndex("IsLeaf")
                        .HasDatabaseName("ix_categories_is_leaf");

                    b.HasIndex("ParentId")
                        .HasDatabaseName("ix_categories_parent_id");

                    b.HasIndex("RootCategoryId")
                        .HasDatabaseName("ix_categories_root_category_id");

                    b.HasIndex("CategoryNumber", "RootCategoryId")
                        .IsUnique()
                        .HasDatabaseName("ix_categories_category_number_root_category_id");

                    b.ToTable("categories", (string)null);
                });

            modelBuilder.Entity("Cqrs.Api.UseCases.RootCategories.Common.Persistence.Entities.RootCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LocaleCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("locale_code");

                    b.HasKey("Id")
                        .HasName("pk_root_categories");

                    b.ToTable("root_categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LocaleCode = "de_DE"
                        },
                        new
                        {
                            Id = 2,
                            LocaleCode = "fr_FR"
                        },
                        new
                        {
                            Id = 3,
                            LocaleCode = "nl_NL"
                        },
                        new
                        {
                            Id = 4,
                            LocaleCode = "es_ES"
                        },
                        new
                        {
                            Id = 5,
                            LocaleCode = "en_GB"
                        },
                        new
                        {
                            Id = 6,
                            LocaleCode = "it_IT"
                        },
                        new
                        {
                            Id = 7,
                            LocaleCode = "pl_PL"
                        },
                        new
                        {
                            Id = 8,
                            LocaleCode = "sv_SE"
                        });
                });

            modelBuilder.Entity("attributes_categories", b =>
                {
                    b.Property<int>("attributes_id")
                        .HasColumnType("int")
                        .HasColumnName("attributes_id");

                    b.Property<int>("categories_id")
                        .HasColumnType("int")
                        .HasColumnName("categories_id");

                    b.HasKey("attributes_id", "categories_id")
                        .HasName("pk_attributes_categories");

                    b.HasIndex("categories_id")
                        .HasDatabaseName("ix_attributes_categories_categories_id");

                    b.ToTable("attributes_categories", (string)null);
                });

            modelBuilder.Entity("ArticleCategory", b =>
                {
                    b.HasOne("Cqrs.Api.UseCases.Articles.Persistence.Entities.Article", null)
                        .WithMany()
                        .HasForeignKey("ArticlesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_article_category_articles_articles_id");

                    b.HasOne("Cqrs.Api.UseCases.Categories.Common.Persistence.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_article_category_categories_categories_id");
                });

            modelBuilder.Entity("Cqrs.Api.UseCases.Attributes.Common.Persistence.Entities.Attribute", b =>
                {
                    b.HasOne("Cqrs.Api.UseCases.Attributes.Common.Persistence.Entities.Attribute", "ParentAttribute")
                        .WithMany("SubAttributes")
                        .HasForeignKey("ParentAttributeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("fk_attributes_attributes_parent_attribute_id");

                    b.HasOne("Cqrs.Api.UseCases.RootCategories.Common.Persistence.Entities.RootCategory", "RootCategory")
                        .WithMany("Attributes")
                        .HasForeignKey("RootCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_attributes_root_categories_root_category_id");

                    b.Navigation("ParentAttribute");

                    b.Navigation("RootCategory");
                });

            modelBuilder.Entity("Cqrs.Api.UseCases.Attributes.Common.Persistence.Entities.AttributeValues.AttributeBooleanValue", b =>
                {
                    b.HasOne("Cqrs.Api.UseCases.Articles.Persistence.Entities.Article", "Article")
                        .WithMany("AttributeBooleanValues")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_attribute_boolean_values_articles_article_id");

                    b.HasOne("Cqrs.Api.UseCases.Attributes.Common.Persistence.Entities.Attribute", "Attribute")
                        .WithMany("AttributeBooleanValues")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_attribute_boolean_values_attributes_attribute_id");

                    b.Navigation("Article");

                    b.Navigation("Attribute");
                });

            modelBuilder.Entity("Cqrs.Api.UseCases.Attributes.Common.Persistence.Entities.AttributeValues.AttributeDecimalValue", b =>
                {
                    b.HasOne("Cqrs.Api.UseCases.Articles.Persistence.Entities.Article", "Article")
                        .WithMany("AttributeDecimalValues")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_attribute_decimal_values_articles_article_id");

                    b.HasOne("Cqrs.Api.UseCases.Attributes.Common.Persistence.Entities.Attribute", "Attribute")
                        .WithMany("AttributeDecimalValues")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_attribute_decimal_values_attributes_attribute_id");

                    b.Navigation("Article");

                    b.Navigation("Attribute");
                });

            modelBuilder.Entity("Cqrs.Api.UseCases.Attributes.Common.Persistence.Entities.AttributeValues.AttributeIntValue", b =>
                {
                    b.HasOne("Cqrs.Api.UseCases.Articles.Persistence.Entities.Article", "Article")
                        .WithMany("AttributeIntValues")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_attribute_int_values_articles_article_id");

                    b.HasOne("Cqrs.Api.UseCases.Attributes.Common.Persistence.Entities.Attribute", "Attribute")
                        .WithMany("AttributeIntValues")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_attribute_int_values_attributes_attribute_id");

                    b.Navigation("Article");

                    b.Navigation("Attribute");
                });

            modelBuilder.Entity("Cqrs.Api.UseCases.Attributes.Common.Persistence.Entities.AttributeValues.AttributeStringValue", b =>
                {
                    b.HasOne("Cqrs.Api.UseCases.Articles.Persistence.Entities.Article", "Article")
                        .WithMany("AttributeStringValues")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_attribute_string_values_articles_article_id");

                    b.HasOne("Cqrs.Api.UseCases.Attributes.Common.Persistence.Entities.Attribute", "Attribute")
                        .WithMany("AttributeStringValues")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_attribute_string_values_attributes_attribute_id");

                    b.Navigation("Article");

                    b.Navigation("Attribute");
                });

            modelBuilder.Entity("Cqrs.Api.UseCases.Categories.Common.Persistence.Entities.Category", b =>
                {
                    b.HasOne("Cqrs.Api.UseCases.Categories.Common.Persistence.Entities.Category", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("fk_categories_categories_parent_id");

                    b.HasOne("Cqrs.Api.UseCases.RootCategories.Common.Persistence.Entities.RootCategory", "RootCategory")
                        .WithMany("Categories")
                        .HasForeignKey("RootCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_categories_root_categories_root_category_id");

                    b.Navigation("Parent");

                    b.Navigation("RootCategory");
                });

            modelBuilder.Entity("attributes_categories", b =>
                {
                    b.HasOne("Cqrs.Api.UseCases.Attributes.Common.Persistence.Entities.Attribute", null)
                        .WithMany()
                        .HasForeignKey("attributes_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fk_attributes_categories_attributes_attributes_id");

                    b.HasOne("Cqrs.Api.UseCases.Categories.Common.Persistence.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("categories_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fk_attributes_categories_categories_categories_id");
                });

            modelBuilder.Entity("Cqrs.Api.UseCases.Articles.Persistence.Entities.Article", b =>
                {
                    b.Navigation("AttributeBooleanValues");

                    b.Navigation("AttributeDecimalValues");

                    b.Navigation("AttributeIntValues");

                    b.Navigation("AttributeStringValues");
                });

            modelBuilder.Entity("Cqrs.Api.UseCases.Attributes.Common.Persistence.Entities.Attribute", b =>
                {
                    b.Navigation("AttributeBooleanValues");

                    b.Navigation("AttributeDecimalValues");

                    b.Navigation("AttributeIntValues");

                    b.Navigation("AttributeStringValues");

                    b.Navigation("SubAttributes");
                });

            modelBuilder.Entity("Cqrs.Api.UseCases.Categories.Common.Persistence.Entities.Category", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("Cqrs.Api.UseCases.RootCategories.Common.Persistence.Entities.RootCategory", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Categories");
                });
#pragma warning restore 612, 618
        }
    }
}
